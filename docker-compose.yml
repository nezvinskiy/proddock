version: '3.7'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: ./php-fpm/Dockerfile
    image: digitalocean.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ${APP_CODE_PATH_HOST}:/var/www
      - ./php-fpm/conf.d/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  app-cli:
    build:
      context: .
      dockerfile: ./php-cli/Dockerfile
    image: digitalocean.com/php-cli
    container_name: app-cli
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app-cli
      SERVICE_TAGS: dev-cli
    working_dir: /var/www
    volumes:
      - ${APP_CODE_PATH_HOST}:/var/www
      - ./php-cli/conf.d/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  node:
    image: node:12-stretch
    container_name: node
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
      - ${APP_CODE_PATH_HOST}:/var/www
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${APP_CODE_PATH_HOST}:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./nginx/log:/var/log/nginx/
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - app-network

  #CertBot for SSL Letâ€™s Encrypt
  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: unless-stopped
    tty: true
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  #MySQL Service
  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
      - ./data/backups:/var/backups
    networks:
      - app-network
    command: --max_allowed_packet=256M --collation-server=utf8mb4_unicode_ci --character-set-server=utf8mb4 --default-authentication-plugin=mysql_native_password

  #PhpMyAdmin Service
  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=db
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local
